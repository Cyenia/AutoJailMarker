name: Release

on:
  push

jobs:
  build:
    runs-on: windows-latest

    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Get-Version
        id: version
        run: echo "VERSION=$(([XML](Get-Content AutoJailMarker\AutoJailMarker.csproj)).Project.PropertyGroup.Version)".Trim() >> $env:GITHUB_OUTPUT

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Download Dalamud
        run: |
          Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/stg/latest.zip -OutFile latest.zip
          Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev\"

      - name: Build
        env:
          VERSION: ${{ steps.version.outputs.VERSION }}
        run: |
          Invoke-Expression "dotnet build --no-restore --configuration Release --nologo -p:Version=${{ env.VERSION }} -p:FileVersion=${{ env.VERSION }} -p:AssemblyVersion=${{ env.VERSION }}"

      - name: Create Release
        id: create_release
        uses: elgohr/Github-Release-Action@v5
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: "refs/tags/${{ steps.version.outputs.VERSION }}"
          TITLE: ${{ steps.version.outputs.VERSION }}
        with:
          tag: ${{ env.TAG }}
          title : ${{ env.TITLE }}
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./AutoJailMarker/bin/Release/AutoJailMarker/latest.zip
          asset_name: AutoJailMarker.zip
          asset_content_type: application/zip

      - name: Write out repo.json
        env:
          VERSION: ${{ steps.version.outputs.VERSION }}
        run: |
          $version = "${{ env.VERSION }}"
          $unix = Get-Date -UFormat %s
          $path = './AutoJailMarker/repo.json'
          $json = Get-Content -Raw $path | ConvertFrom-Json
          $json[0].AssemblyVersion = $version
          $json[0].DownloadLinkInstall = $json.DownloadLinkInstall -replace '[^/]+/AutoJailMarker.zip',"$version/AutoJailMarker.zip"
          $json[0].DownloadLinkTesting = $json.DownloadLinkTesting -replace '[^/]+/AutoJailMarker.zip',"$version/AutoJailMarker.zip"
          $json[0].DownloadLinkUpdate = $json.DownloadLinkUpdate -replace '[^/]+/AutoJailMarker.zip',"$version/AutoJailMarker.zip"
          $json[0].LastUpdated = $unix
          $content = $json | ConvertTo-Json -AsArray
          set-content -Path $path -Value $content

      - name: Commit repo.json
        run: |
          git config --global user.name "Actions User"
          git config --global user.email "actions@github.com"
          git fetch origin master
          git branch -f master ${{ github.sha }}
          git checkout master
          git add AutoJailMarker/repo.json
          git commit -m "[CI] Updating repo.json for ${{ github.ref_name }}" || true
          git push origin master